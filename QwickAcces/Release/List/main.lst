##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    18/Aug/2015  23:03:06 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\kl\dev\Embedded Workbench 4.0                     #
#                       Evaluation\Project\QwickAcces\main.c                 #
#    Command line    =  "D:\kl\dev\Embedded Workbench 4.0                    #
#                       Evaluation\Project\QwickAcces\main.c" -D NDEBUG -D   #
#                       OLDFUNCTIONS -lC "D:\kl\dev\Embedded Workbench 4.0   #
#                       Evaluation\Project\QwickAcces\Release\List\" -lA     #
#                       "D:\kl\dev\Embedded Workbench 4.0                    #
#                       Evaluation\Project\QwickAcces\Release\List\" -o      #
#                       "D:\kl\dev\Embedded Workbench 4.0                    #
#                       Evaluation\Project\QwickAcces\Release\Obj\" -s9      #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e            #
#                       --enable_multibytes --fpu None --eec++               #
#                       --dlib_config "D:\kl\dev\Embedded Workbench 4.0      #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "D:\kl\dev\Embedded Workbench 4.0                    #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  D:\kl\dev\Embedded Workbench 4.0                     #
#                       Evaluation\Project\QwickAcces\Release\List\main.lst  #
#    Object file     =  D:\kl\dev\Embedded Workbench 4.0                     #
#                       Evaluation\Project\QwickAcces\Release\Obj\main.r79   #
#                                                                            #
#                                                                            #
##############################################################################

D:\kl\dev\Embedded Workbench 4.0 Evaluation\Project\QwickAcces\main.c
      1          #include "..\\include\Lib_Clara.h"
      2          #include "..\\include\Dir.h"
      3          #include "..\\include\Types.h"
      4          #include "..\\include\var_arg.h"
      5          #include "main.h"
      6          
      7          #define ELF_NAME "QuickAccess"
      8          #define ELF_VER  "1.0"
      9          #define QUICKACCESS_MENU_BOOK_NAME "QAMenu_Book"
     10          
     11          #define LIST_ITEM_COUNT 13
     12          
     13          void QuickAccess_menu( void* r0,BOOK* bk,GUI_LIST* gui );
     14          //=====================
     15          
     16          BOOK * QuickAccessBook;

   \                                 In segment DATA_Z, align 4, align-sorted
     17          MyBOOK * mbk;
   \                     mbk:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 2, align-sorted
     18          u16 timer;
   \                     timer:
   \   00000000                      DS8 2
     19          

   \                                 In segment DATA_Z, align 4, align-sorted
     20          GUI* QuestionReboot_GUI;
   \                     QuestionReboot_GUI:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     21          GUI* QuestionShutdown_GUI;
   \                     QuestionShutdown_GUI:
   \   00000000                      DS8 4
     22          
     23          TEXTID names_textid[LIST_ITEM_COUNT];
     24          
     25          wchar_t* names_str[] = {
     26            L"Перезагрузка",      
     27            L"Выключение",       
     28            L"Блокировка",
     29            L" ", // Беззвучный    
     30            L"Фонарик", 
     31            L" "
     32          };
     33          
     34          int imageid[] = {
     35            0x8FE,
     36            0x13F,
     37            0x47A,
     38            0x81E,
     39            0x2E1,
     40            NOIMAGE,
     41            0x7DD,
     42            0x7DA,
     43            0x7D4,
     44            0x7E3,
     45            0x7E9,
     46            0x7D1,
     47            0x7E0
     48          };
     49          
     50          

   \                                 In segment CODE, align 4, keep-with-next
     51          int isBook(BOOK* book, int* param)
     52          {
   \                     ??isBook:
   \   00000000   00402DE9           PUSH     {LR}
     53            if(!strcmp( book->xbook->name, (char*)param)) return (1);
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   040090E5           LDR      R0,[R0, #+4]
   \   0000000C   590100EF           SWI      +345
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100A003           MOVEQ    R0,#+1
   \   00000018   0080BD08           POPEQ    {PC}
     54            return (0);
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   0080BDE8           POP      {PC}             ;; return
     55          }
     56          

   \                                 In segment CODE, align 4, keep-with-next
     57          int isCallListBook( BOOK* book )
     58          {
     59            return 0 == strcmp( book->xbook->name, "PB_UI_CallListBook" );
   \                     ??isCallListBook:
   \   00000000   20109FE5           LDR      R1,??isCallListBook_1  ;; `?<Constant "PB_UI_CallListBook">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??isCallListBook_1:
   \   00000028   ........           DC32     `?<Constant "PB_UI_CallListBook">`
     60          }
     61          

   \                                 In segment CODE, align 4, keep-with-next
     62          int isMyQABook( BOOK* book )
     63          {
     64            return 0 == strcmp( book->xbook->name, QUICKACCESS_MENU_BOOK_NAME );
   \                     ??isMyQABook:
   \   00000000   ........           LDR      R1,??DataTable26  ;; `?<Constant "QAMenu_Book">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
     65          }
     66          
     67          //-- YesNoQuestionVA Reboot ----------------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     68          void OnNo_QuestionReboot(BOOK * bk, void *)
     69          {
   \                     ??OnNo_QuestionReboot:
   \   00000000   10402DE9           PUSH     {R4,LR}
     70            FREE_GUI(QuestionReboot_GUI);
   \   00000004   ........           LDR      R4,??DataTable3  ;; QuestionReboot_GUI
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   CE0100EF           SWI      +462
   \   00000018   000084E5           STR      R0,[R4, #+0]
     71          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
     72           

   \                                 In segment CODE, align 4, keep-with-next
     73          void OnYes_QuestionReboot(BOOK * bk, void *)
     74          {
   \                     ??OnYes_QuestionReboot:
   \   00000000   10402DE9           PUSH     {R4,LR}
     75            FREE_GUI(QuestionReboot_GUI);
   \   00000004   ........           LDR      R4,??DataTable3  ;; QuestionReboot_GUI
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??OnYes_QuestionReboot_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   000084E5           STR      R0,[R4, #+0]
     76            REQUEST_SYSTEM_RESTART();
   \                     ??OnYes_QuestionReboot_1:
   \   0000001C   C60100EF           SWI      +454
     77          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     78           

   \                                 In segment CODE, align 4, keep-with-next
     79          void Create_QuestionReboot(BOOK* bk)
     80          {
   \                     ??Create_QuestionReboot:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     81            QuestionReboot_GUI = CreateYesNoQuestionVA(0,
     82                                  VAR_BOOK( bk ),
     83                                  VAR_YESNO_PRE_QUESTION( STR("Перезагрузить телефон?") ),
     84                                  //VAR_YESNO_QUESTION( STR("Продолжить?") ),
     85                                  VAR_YESNO_YES_ACTION( OnYes_QuestionReboot ),
     86                                  VAR_YESNO_NO_ACTION( OnNo_QuestionReboot ),
     87                                  0);
   \   00000004   FF20A0E3           MOV      R2,#+255
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   60009FE5           LDR      R0,??Create_QuestionReboot_1  ;; `?<Constant L"\\x41f\\x435\\x440\\x435\\x437\\x430\\x4_1`
   \   00000010   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000014   ........           LDR      R5,??DataTable3  ;; QuestionReboot_GUI
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   ........           LDR      R3,??DataTable11  ;; VAR_ARG_YESNO_PRE_QUESTION
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   44109FE5           LDR      R1,??Create_QuestionReboot_1+0x4  ;; ??OnNo_QuestionReboot
   \   00000030   0420A0E1           MOV      R2,R4
   \   00000034   02002DE9           PUSH     {R1}
   \   00000038   ........           LDR      R1,??DataTable12  ;; VAR_ARG_YESNO_NO_ACTION
   \   0000003C   02002DE9           PUSH     {R1}
   \   00000040   34109FE5           LDR      R1,??Create_QuestionReboot_1+0x8  ;; ??OnYes_QuestionReboot
   \   00000044   02002DE9           PUSH     {R1}
   \   00000048   ........           LDR      R1,??DataTable13  ;; VAR_ARG_YESNO_YES_ACTION
   \   0000004C   02002DE9           PUSH     {R1}
   \   00000050   ........           LDR      R1,??DataTable14  ;; VAR_ARG_BOOK
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   A50200EF           SWI      +677
   \   00000060   000085E5           STR      R0,[R5, #+0]
     88            YesNoQuestion_SetIcon( QuestionReboot_GUI, 0x140);
   \   00000064   501FA0E3           MOV      R1,#+320
   \   00000068   BF0300EF           SWI      +959
     89          }
   \   0000006C   18D08DE2           ADD      SP,SP,#+24
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Create_QuestionReboot_1:
   \   00000074   ........           DC32     `?<Constant L"\\x41f\\x435\\x440\\x435\\x437\\x430\\x4_1`
   \   00000078   ........           DC32     ??OnNo_QuestionReboot
   \   0000007C   ........           DC32     ??OnYes_QuestionReboot
     90          //------------------------------------------------------------------------------------------------------------
     91          
     92          //-- YesNoQuestionVA Shutdown --------------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     93          void OnNo_QuestionShutdown(BOOK * bk, void *)
     94          {
   \                     ??OnNo_QuestionShutdown:
   \   00000000   10402DE9           PUSH     {R4,LR}
     95            FREE_GUI(QuestionShutdown_GUI);
   \   00000004   ........           LDR      R4,??DataTable10  ;; QuestionShutdown_GUI
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   CE0100EF           SWI      +462
   \   00000018   000084E5           STR      R0,[R4, #+0]
     96          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
     97           

   \                                 In segment CODE, align 4, keep-with-next
     98          void OnYes_QuestionShutdown(BOOK * bk, void *)
     99          {
   \                     ??OnYes_QuestionShutdown:
   \   00000000   10402DE9           PUSH     {R4,LR}
    100            FREE_GUI(QuestionShutdown_GUI);
   \   00000004   ........           LDR      R4,??DataTable10  ;; QuestionShutdown_GUI
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??OnYes_QuestionShutdown_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   000084E5           STR      R0,[R4, #+0]
    101            REQUEST_SYSTEM_SHUTDOWN();
   \                     ??OnYes_QuestionShutdown_1:
   \   0000001C   C50100EF           SWI      +453
    102          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    103           

   \                                 In segment CODE, align 4, keep-with-next
    104          void Create_QuestionShutdown(BOOK* bk)
    105          {
   \                     ??Create_QuestionShutdown:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    106            QuestionShutdown_GUI = CreateYesNoQuestionVA(0,
    107                                  VAR_BOOK( bk ),
    108                                  VAR_YESNO_PRE_QUESTION( STR("Выключить телефон?") ),
    109                                  //VAR_YESNO_QUESTION( STR("Продолжить?") ),
    110                                  VAR_YESNO_YES_ACTION( OnYes_QuestionShutdown ),
    111                                  VAR_YESNO_NO_ACTION( OnNo_QuestionShutdown ),
    112                                  0);
   \   00000004   FF20A0E3           MOV      R2,#+255
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   60009FE5           LDR      R0,??Create_QuestionShutdown_1  ;; `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4_1`
   \   00000010   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000014   ........           LDR      R5,??DataTable10  ;; QuestionShutdown_GUI
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   ........           LDR      R3,??DataTable11  ;; VAR_ARG_YESNO_PRE_QUESTION
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   44109FE5           LDR      R1,??Create_QuestionShutdown_1+0x4  ;; ??OnNo_QuestionShutdown
   \   00000030   0420A0E1           MOV      R2,R4
   \   00000034   02002DE9           PUSH     {R1}
   \   00000038   ........           LDR      R1,??DataTable12  ;; VAR_ARG_YESNO_NO_ACTION
   \   0000003C   02002DE9           PUSH     {R1}
   \   00000040   34109FE5           LDR      R1,??Create_QuestionShutdown_1+0x8  ;; ??OnYes_QuestionShutdown
   \   00000044   02002DE9           PUSH     {R1}
   \   00000048   ........           LDR      R1,??DataTable13  ;; VAR_ARG_YESNO_YES_ACTION
   \   0000004C   02002DE9           PUSH     {R1}
   \   00000050   ........           LDR      R1,??DataTable14  ;; VAR_ARG_BOOK
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   A50200EF           SWI      +677
   \   00000060   000085E5           STR      R0,[R5, #+0]
    113            YesNoQuestion_SetIcon( QuestionShutdown_GUI, 0x140);
   \   00000064   501FA0E3           MOV      R1,#+320
   \   00000068   BF0300EF           SWI      +959
    114          }
   \   0000006C   18D08DE2           ADD      SP,SP,#+24
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Create_QuestionShutdown_1:
   \   00000074   ........           DC32     `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4_1`
   \   00000078   ........           DC32     ??OnNo_QuestionShutdown
   \   0000007C   ........           DC32     ??OnYes_QuestionShutdown
    115          //------------------------------------------------------------------------------------------------------------
    116          //======* i?e ia?aoee "iacaa" *=================================================

   \                                 In segment CODE, align 4, keep-with-next
    117          void GuiBack(BOOK* bk,GUI_LIST* gui)
    118          {
   \                     ??GuiBack:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    119            //if(timer) Timer_Kill(&timer);
    120            ListMenu_DestroyItems(gui);
   \   00000008   0400A0E1           MOV      R0,R4
   \   0000000C   BB0300EF           SWI      +955
    121            GUI_Free(gui);               // oaeaaai  aoe
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   CE0100EF           SWI      +462
    122            FreeBook(&(mbk->book));                // oaeaaai aoe
   \   00000018   ........           LDR      R0,??DataTable23  ;; mbk
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   2F0100EF           SWI      +303
    123          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
    124          
    125          //------------------------------------------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    126          void SelectMenuItem_Reboot(BOOK* book)
    127          {
    128            Create_QuestionReboot(book);
   \                     ??SelectMenuItem_Reboot:
   \   00000000   ........           B        ??Create_QuestionReboot  ;; tailcall
    129          }
    130          

   \                                 In segment CODE, align 4, keep-with-next
    131          void SelectMenuItem_Shutdown(BOOK* book)
    132          {
    133            Create_QuestionShutdown(book);
   \                     ??SelectMenuItem_Shutdown:
   \   00000000   ........           B        ??Create_QuestionShutdown  ;; tailcall
    134          } 
    135          

   \                                 In segment CODE, align 4, keep-with-next
    136          void SelectMenuItem_KeyLock(void)
    137          {
    138            UI_Event(UI_KEYLOCK_ACTIVATE_EVENT);
   \                     ??SelectMenuItem_KeyLock:
   \   00000000   ........           LDR      R0,??DataTable27  ;; UI_KEYLOCK_ACTIVATE_EVENT
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   A80100EF           SWI      +424
    139            UI_Event(UI_SLEEPMODE_ACTIVATE_EVENT);
   \   00000010   ........           LDR      R0,??DataTable28  ;; UI_SLEEPMODE_ACTIVATE_EVENT
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   A80100EF           SWI      +424
    140          }
   \   0000001C   0080BDE8           POP      {PC}             ;; return
    141          

   \                                 In segment CODE, align 4, keep-with-next
    142          void SelectMenuItem_SilenceMode(void)
    143          {
   \                     ??SelectMenuItem_SilenceMode:
   \   00000000   10402DE9           PUSH     {R4,LR}
    144            int current_profile;
    145                char mute;
    146                REQUEST_PROFILE_GETACTIVEPROFILE(SYNC, &current_profile);
   \   00000004   ........           LDR      R4,??DataTable25  ;; SYNC
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0D10A0E1           MOV      R1,SP
   \   00000014   B40100EF           SWI      +436
    147                REQUEST_SETTING_SILENCE_GET(SYNC, current_profile, &mute); //получаем настройки режима "без звука"
   \   00000018   00109DE5           LDR      R1,[SP, #+0]
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   04208DE2           ADD      R2,SP,#+4
   \   00000024   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000028   2118A0E1           MOV      R1,R1, LSR #+16
   \   0000002C   010200EF           SWI      +513
    148                if(mute == 1)
   \   00000030   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000034   010050E3           CMP      R0,#+1
   \   00000038   0300001A           BNE      ??SelectMenuItem_SilenceMode_1
    149                {  //если режим "без звука" включен
    150                  REQUEST_SETTING_SILENCE_SET(SYNC,(u16)current_profile,(u16)0);
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   000094E5           LDR      R0,[R4, #+0]
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   040000EA           B        ??SelectMenuItem_SilenceMode_2
    151                }
    152                else
    153                if(mute == 0)
   \                     ??SelectMenuItem_SilenceMode_1:
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   1380BD18           POPNE    {R0,R1,R4,PC}
    154                {  //если режим "без звука" выключен
    155                  REQUEST_SETTING_SILENCE_SET(SYNC,(u16)current_profile,(u16)1); 
   \   00000054   00109DE5           LDR      R1,[SP, #+0]
   \   00000058   000094E5           LDR      R0,[R4, #+0]
   \   0000005C   0120A0E3           MOV      R2,#+1
   \                     ??SelectMenuItem_SilenceMode_2:
   \   00000060   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000064   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000068   000200EF           SWI      +512
    156                }
    157          }
   \   0000006C   1380BDE8           POP      {R0,R1,R4,PC}    ;; return
    158          

   \                                 In segment CODE, align 4, keep-with-next
    159          void SelectMenuItem_FlashLight(void)
    160          {
   \                     ??SelectMenuItem_FlashLight:
   \   00000000   00402DE9           PUSH     {LR}
    161            SetLampLevel(1);
   \   00000004   0100A0E3           MOV      R0,#+1
   \   00000008   780100EF           SWI      +376
    162          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
    163          

   \                                 In segment CODE, align 4, keep-with-next
    164          void SelectMenuItem_SelectProfile(int NumProfile)
    165          {
   \                     ??SelectMenuItem_SelectProfile:
   \   00000000   00402DE9           PUSH     {LR}
    166            Profile_SetActive(NumProfile, NumProfile);
   \   00000004   0010A0E1           MOV      R1,R0
   \   00000008   B50100EF           SWI      +437
    167          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
    168          

   \                                 In segment CODE, align 4, keep-with-next
    169          void GuiOnEnterPressed(BOOK* book,GUI_LIST* gui)
    170          {
   \                     ??GuiOnEnterPressed:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    171            switch(ListMenu_GetSelectedItem(gui))
   \   0000000C   0500A0E1           MOV      R0,R5
   \   00000010   3E0100EF           SWI      +318
   \   00000014   0C0050E3           CMP      R0,#+12
   \   00000018   3080BD88           POPHI    {R4,R5,PC}
   \   0000001C   011F8FE2           ADR      R1,??GuiOnEnterPressed_1
   \   00000020   0010D1E7           LDRB     R1,[R1, R0]
   \   00000024   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??GuiOnEnterPressed_1:
   \   00000028   0306090B           DC8      +3,+6,+9,+11
   \   0000002C   0D151012           DC8      +13,+21,+16,+18
   \   00000030   191B1D1F           DC8      +25,+27,+29,+31
   \   00000034   21000000           DC8      +33,+0,+0,+0
    172            {
    173              case 0: 
    174                {
    175                  SelectMenuItem_Reboot(book);
   \                     ??GuiOnEnterPressed_2:
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       ??Create_QuestionReboot
    176                  break;
   \   00000040   3080BDE8           POP      {R4,R5,PC}
    177                }
    178              case 1: 
    179                {
    180                  SelectMenuItem_Shutdown(book);
   \                     ??GuiOnEnterPressed_3:
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       ??Create_QuestionShutdown
    181                  break;
   \   0000004C   3080BDE8           POP      {R4,R5,PC}
    182                }
    183              case 2:
    184                {
    185                  SelectMenuItem_KeyLock();
   \                     ??GuiOnEnterPressed_4:
   \   00000050   ........           BL       ??SelectMenuItem_KeyLock
    186                  GuiBack(book, gui);
   \   00000054   090000EA           B        ??GuiOnEnterPressed_5
    187                  break;
    188                }
    189              case 3:
    190                {
    191                  SelectMenuItem_SilenceMode();
   \                     ??GuiOnEnterPressed_6:
   \   00000058   ........           BL       ??SelectMenuItem_SilenceMode
    192                  GuiBack(book, gui);
   \   0000005C   070000EA           B        ??GuiOnEnterPressed_5
    193                  break;
    194                }
    195              case 4:
    196                {
    197                  SelectMenuItem_FlashLight();
   \                     ??GuiOnEnterPressed_7:
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   780100EF           SWI      +376
    198                  GuiBack(book, gui);
   \   00000068   040000EA           B        ??GuiOnEnterPressed_5
    199                  break;
    200                }
    201              case 5:
    202                {
    203                  GuiBack(book, gui);
    204                  break;
    205                }
    206              case 6:
    207                {
    208                  SelectMenuItem_SelectProfile(0);
   \                     ??GuiOnEnterPressed_8:
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   000000EA           B        ??GuiOnEnterPressed_9
    209                  GuiBack(book, gui);
    210                  break;
    211                }
    212              case 7:
    213                {
    214                  SelectMenuItem_SelectProfile(1);
   \                     ??GuiOnEnterPressed_10:
   \   00000074   0110A0E3           MOV      R1,#+1
   \                     ??GuiOnEnterPressed_9:
   \   00000078   0100A0E1           MOV      R0,R1
   \   0000007C   B50100EF           SWI      +437
    215                  GuiBack(book, gui);
   \                     ??GuiOnEnterPressed_5:
   \   00000080   0510A0E1           MOV      R1,R5
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       ??GuiBack
    216                  break;
   \   0000008C   3080BDE8           POP      {R4,R5,PC}
    217                }
    218              case 8:
    219                {
    220                  SelectMenuItem_SelectProfile(2);
   \                     ??GuiOnEnterPressed_11:
   \   00000090   0210A0E3           MOV      R1,#+2
   \   00000094   F7FFFFEA           B        ??GuiOnEnterPressed_9
    221                  GuiBack(book, gui);
    222                  break;
    223                }
    224              case 9:
    225                {
    226                  SelectMenuItem_SelectProfile(3);
   \                     ??GuiOnEnterPressed_12:
   \   00000098   0310A0E3           MOV      R1,#+3
   \   0000009C   F5FFFFEA           B        ??GuiOnEnterPressed_9
    227                  GuiBack(book, gui);
    228                  break;
    229                }
    230              case 10:
    231                {
    232                  SelectMenuItem_SelectProfile(4);
   \                     ??GuiOnEnterPressed_13:
   \   000000A0   0410A0E3           MOV      R1,#+4
   \   000000A4   F3FFFFEA           B        ??GuiOnEnterPressed_9
    233                  GuiBack(book, gui);
    234                  break;
    235                }
    236              case 11:
    237                {
    238                  SelectMenuItem_SelectProfile(5);
   \                     ??GuiOnEnterPressed_14:
   \   000000A8   0510A0E3           MOV      R1,#+5
   \   000000AC   F1FFFFEA           B        ??GuiOnEnterPressed_9
    239                  GuiBack(book, gui);
    240                  break;
    241                }
    242              case 12:
    243                {
    244                  SelectMenuItem_SelectProfile(6);
   \                     ??GuiOnEnterPressed_15:
   \   000000B0   0610A0E3           MOV      R1,#+6
   \   000000B4   0600A0E3           MOV      R0,#+6
   \   000000B8   B50100EF           SWI      +437
    245                  GuiBack(book, gui);
   \   000000BC   0510A0E1           MOV      R1,R5
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           BL       ??GuiBack
    246                  break;
    247                }
    248            }
    249             //GuiBack(book, gui);
    250          }
   \                     ??GuiOnEnterPressed_16:
   \   000000C8   3080BDE8           POP      {R4,R5,PC}       ;; return
    251          
    252          //=========* aiaaaeyai iacaaiey *===============================================

   \                                 In segment CODE, align 4, keep-with-next
    253          int GuiOnLBMessage(GUI_MESSAGE* msg)
    254          {
   \                     ??GuiOnLBMessage:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
    255            int index;
    256            switch(msg->__msg)
   \   0000000C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000010   010050E3           CMP      R0,#+1
   \   00000014   2500001A           BNE      ??GuiOnLBMessage_1
    257            {
    258              case 1:
    259              index = GUIonMessage_GetCreatedItemIndex(msg);
    260              if(index == 3)
   \   00000018   ........           LDR      R6,??DataTable24  ;; names_textid
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   370100EF           SWI      +311
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   030055E3           CMP      R5,#+3
   \   0000002C   1500001A           BNE      ??GuiOnLBMessage_2
    261              {
    262                int current_profile;
    263                char mute;
    264                REQUEST_PROFILE_GETACTIVEPROFILE(SYNC, &current_profile);
   \   00000030   ........           LDR      R7,??DataTable25  ;; SYNC
   \   00000034   04108DE2           ADD      R1,SP,#+4
   \   00000038   000097E5           LDR      R0,[R7, #+0]
   \   0000003C   B40100EF           SWI      +436
    265                REQUEST_SETTING_SILENCE_GET(SYNC, current_profile, &mute); //получаем настройки режима "без звука"
   \   00000040   04109DE5           LDR      R1,[SP, #+4]
   \   00000044   000097E5           LDR      R0,[R7, #+0]
   \   00000048   0D20A0E1           MOV      R2,SP
   \   0000004C   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000050   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000054   010200EF           SWI      +513
    266                if(mute == 1)
   \   00000058   0010DDE5           LDRB     R1,[SP, #+0]
   \   0000005C   54009FE5           LDR      R0,??GuiOnLBMessage_3  ;; `?<Constant L"\\x41e\\x442\\x43a\\x43b\\x2e\\x20\\x431`
   \   00000060   FF20A0E3           MOV      R2,#+255
   \   00000064   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000068   010051E3           CMP      R1,#+1
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   0200001A           BNE      ??GuiOnLBMessage_4
    267                {  //если режим "без звука" включен
    268                  GUIonMessage_SetMenuItemText(msg, TextID_Create(L"Откл. беззвучный", ENC_UCS2,TEXTID_ANY_LEN));
   \                     ??GuiOnLBMessage_5:
   \   00000074   5D0100EF           SWI      +349
   \   00000078   0010A0E1           MOV      R1,R0
   \   0000007C   020000EA           B        ??GuiOnLBMessage_6
    269                }
    270                else
    271                {  //если режим "без звука" выключен
    272                  GUIonMessage_SetMenuItemText(msg, TextID_Create(L"Вкл. беззвучный", ENC_UCS2,TEXTID_ANY_LEN)); 
   \                     ??GuiOnLBMessage_4:
   \   00000080   240080E2           ADD      R0,R0,#+36
   \   00000084   FAFFFFEA           B        ??GuiOnLBMessage_5
    273                }
    274              }
    275              else
    276              {
    277                GUIonMessage_SetMenuItemText(msg, names_textid[index]);
   \                     ??GuiOnLBMessage_2:
   \   00000088   051196E7           LDR      R1,[R6, +R5, LSL #+2]
   \                     ??GuiOnLBMessage_6:
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   380100EF           SWI      +312
    278              }
    279              GUIonMessage_SetMenuItemIcon(msg, 0, imageid[index]);
   \   00000094   050186E0           ADD      R0,R6,R5, LSL #+2
   \   00000098   4C2090E5           LDR      R2,[R0, #+76]
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   0228A0E1           MOV      R2,R2, LSL #+16
   \   000000A4   2228A0E1           MOV      R2,R2, LSR #+16
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   3C0100EF           SWI      +316
    280              break;
    281            }
    282            return(1);
   \                     ??GuiOnLBMessage_1:
   \   000000B0   0100A0E3           MOV      R0,#+1
   \   000000B4   F680BDE8           POP      {R1,R2,R4-R7,PC}  ;; return
   \                     ??GuiOnLBMessage_3:
   \   000000B8   ........           DC32     `?<Constant L"\\x41e\\x442\\x43a\\x43b\\x2e\\x20\\x431`
    283          }
    284          
    285          //==============================================================================
    286          

   \                                 In segment CODE, align 4, keep-with-next
    287          MyBOOK * Create_QuickAccessMenuBook()
    288          {
   \                     ??Create_QuickAccessMenuBook:
   \   00000000   10402DE9           PUSH     {R4,LR}
    289            mbk = new MyBOOK;
   \   00000004   ........           LDR      R4,??DataTable23  ;; mbk
   \   00000008   1C00A0E3           MOV      R0,#+28
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
    290            CreateBook(&(mbk->book), NULL, NULL, QUICKACCESS_MENU_BOOK_NAME, -1, NULL);
   \   00000010   ........           LDR      R3,??DataTable26  ;; `?<Constant "QAMenu_Book">`
   \   00000014   000084E5           STR      R0,[R4, #+0]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0000E0E1           MVN      R0,R0
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   2B0100EF           SWI      +299
    291            return(mbk);
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
    292          }
    293          
    294          
    295          //=========* Запускаем наше меню *==============================================
    296          

   \                                 In segment CODE, align 4, keep-with-next
    297          void Create_QuickAccessMenu()
    298          {
    299            if( !FindBook(isMyQABook) )
   \                     ??Create_QuickAccessMenu:
   \   00000000   28009FE5           LDR      R0,??Create_QuickAccessMenu_1  ;; ??isMyQABook
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   300100EF           SWI      +304
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0080BD18           POPNE    {PC}
    300            {
    301              Create_QuickAccessMenuBook();
   \   00000014   ........           BL       ??Create_QuickAccessMenuBook
    302              QuickAccess_menu(0,&(mbk->book),mbk->gui); // gui.c
   \   00000018   ........           LDR      R0,??DataTable23  ;; mbk
   \   0000001C   001090E5           LDR      R1,[R0, #+0]
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   182091E5           LDR      R2,[R1, #+24]
   \   00000028   ........           BL       ??QuickAccess_menu
    303            }
    304          }
   \   0000002C   0080BDE8           POP      {PC}             ;; return
   \                     ??Create_QuickAccessMenu_1:
   \   00000030   ........           DC32     ??isMyQABook
    305          //------------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    306          void onTimer(u16 timerID , LPARAM gui)
    307          {
   \                     ??onTimer:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   82DF4DE2           SUB      SP,SP,#+520
    308            DATETIME dt;
    309            int sec, min, hour, year, mon, day;
    310            REQUEST_DATEANDTIME_GET(0,&dt);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0D10A0E1           MOV      R1,SP
   \   00000014   6E0100EF           SWI      +366
    311            hour = dt.time.hour;
    312            min = dt.time.min;
    313            sec = dt.time.sec;
    314            year = dt.date.year;
    315            mon = dt.date.mon;
    316            day = dt.date.day;
    317            wchar_t info[256];
    318            snwprintf(info,255,L"%i-%i-%i | %i:%i:%i", day, mon, year, hour, min, sec );
   \   00000018   0600DDE5           LDRB     R0,[SP, #+6]
   \   0000001C   6C209FE5           LDR      R2,??onTimer_1   ;; `?<Constant L"\\x25\\x69\\x2d\\x25\\x69\\x2d\\x25\\x69\\`
   \   00000020   FF10A0E3           MOV      R1,#+255
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   0900DDE5           LDRB     R0,[SP, #+9]
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   0C00DDE5           LDRB     R0,[SP, #+12]
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   BC00DDE1           LDRH     R0,[SP, #+12]
   \   0000003C   01002DE9           PUSH     {R0}
   \   00000040   1200DDE5           LDRB     R0,[SP, #+18]
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   1730DDE5           LDRB     R3,[SP, #+23]
   \   0000004C   1C008DE2           ADD      R0,SP,#+28
   \   00000050   150100EF           SWI      +277
    319            GuiObject_SetTitleText((GUI*)gui, TextID_Create( info, ENC_UCS2,TEXTID_ANY_LEN));
   \   00000054   FF20A0E3           MOV      R2,#+255
   \   00000058   FF2C82E3           ORR      R2,R2,#0xFF00
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   1C008DE2           ADD      R0,SP,#+28
   \   00000064   5D0100EF           SWI      +349
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   330100EF           SWI      +307
    320            Timer_ReSet(&timer,1000,onTimer,gui);
   \   00000074   18209FE5           LDR      R2,??onTimer_1+0x4  ;; ??onTimer
   \   00000078   18009FE5           LDR      R0,??onTimer_1+0x8  ;; timer
   \   0000007C   0430A0E1           MOV      R3,R4
   \   00000080   FA1FA0E3           MOV      R1,#+1000
   \   00000084   280100EF           SWI      +296
    321          }
   \   00000088   87DF8DE2           ADD      SP,SP,#+540
   \   0000008C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??onTimer_1:
   \   00000090   ........           DC32     `?<Constant L"\\x25\\x69\\x2d\\x25\\x69\\x2d\\x25\\x69\\`
   \   00000094   ........           DC32     ??onTimer
   \   00000098   ........           DC32     timer
    322          
    323          //==============================================================================

   \                                 In segment CODE, align 4, keep-with-next
    324          void QuickAccess_menu( void* r0,BOOK* bk,GUI_LIST* gui )
    325          {
   \                     ??QuickAccess_menu:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    326            for(int i = 0; i < 6; i++)
   \   00000004   ........           LDR      R6,??DataTable24  ;; names_textid
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0070A0E3           MOV      R7,#+0
   \   00000014   FF40A0E3           MOV      R4,#+255
   \   00000018   FF4C84E3           ORR      R4,R4,#0xFF00
    327            {
    328              names_textid[i] = TextID_Create(names_str[i], ENC_UCS2,TEXTID_ANY_LEN);
   \                     ??QuickAccess_menu_1:
   \   0000001C   0420A0E1           MOV      R2,R4
   \   00000020   070186E0           ADD      R0,R6,R7, LSL #+2
   \   00000024   340090E5           LDR      R0,[R0, #+52]
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   5D0100EF           SWI      +349
   \   00000030   070186E7           STR      R0,[R6, +R7, LSL #+2]
    329            }
   \   00000034   017087E2           ADD      R7,R7,#+1
   \   00000038   060057E3           CMP      R7,#+6
   \   0000003C   F6FFFFBA           BLT      ??QuickAccess_menu_1
    330            
    331            TEXTID_DATA utf8str;
    332            wchar_t SetName[0x10];
    333            utf8str.ptr = SetName;
   \   00000040   0C108DE2           ADD      R1,SP,#+12
   \   00000044   04108DE5           STR      R1,[SP, #+4]
    334            char error;  
    335            for(int i = 0,y = 6; i<7; i++, y++)
   \   00000048   0070A0E3           MOV      R7,#+0
   \   0000004C   0680A0E3           MOV      R8,#+6
    336            { 
    337              REQUEST_PROFILE_GETPROFILENAME( SYNC, i, &utf8str, &error ); 
   \                     ??QuickAccess_menu_2:
   \   00000050   ........           LDR      R0,??DataTable25  ;; SYNC
   \   00000054   08308DE2           ADD      R3,SP,#+8
   \   00000058   000090E5           LDR      R0,[R0, #+0]
   \   0000005C   0D20A0E1           MOV      R2,SP
   \   00000060   0710A0E1           MOV      R1,R7
   \   00000064   720300EF           SWI      +882
    338              names_textid[y] = TextID_Create(&utf8str, ENC_UT, utf8str.lenght);
   \   00000068   B020DDE1           LDRH     R2,[SP, #+0]
   \   0000006C   0810A0E3           MOV      R1,#+8
   \   00000070   0D00A0E1           MOV      R0,SP
   \   00000074   5D0100EF           SWI      +349
   \   00000078   080186E7           STR      R0,[R6, +R8, LSL #+2]
    339            } 
   \   0000007C   017087E2           ADD      R7,R7,#+1
   \   00000080   018088E2           ADD      R8,R8,#+1
   \   00000084   070057E3           CMP      R7,#+7
   \   00000088   F0FFFFBA           BLT      ??QuickAccess_menu_2
    340          
    341            gui = CreateListMenu( bk, 0);
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   C00100EF           SWI      +448
   \   00000098   0050A0E1           MOV      R5,R0
    342            //timer = Timer_Set(1000, onTimer, (LPARAM*)gui);
    343            ListMenu_SetItemCount(gui, LIST_ITEM_COUNT);
   \   0000009C   0D10A0E3           MOV      R1,#+13
   \   000000A0   C10100EF           SWI      +449
    344            ListMenu_SetOnMessage(gui, GuiOnLBMessage);
   \   000000A4   AC109FE5           LDR      R1,??QuickAccess_menu_3  ;; ??GuiOnLBMessage
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   740100EF           SWI      +372
    345            SetCursorToItem(gui,0);
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   350100EF           SWI      +309
    346            SetMenuItemStyle(gui, 0);   //
   \   000000BC   0010A0E3           MOV      R1,#+0
   \   000000C0   0500A0E1           MOV      R0,R5
   \   000000C4   3F0100EF           SWI      +319
    347            GUIObject_SetStyle(gui, 2);  //Full screen   4
   \   000000C8   0210A0E3           MOV      R1,#+2
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   360100EF           SWI      +310
    348            GuiObject_SetTitleText(gui, TextID_Create(L"QuickAccessMenu", ENC_UCS2,TEXTID_ANY_LEN));
   \   000000D4   80009FE5           LDR      R0,??QuickAccess_menu_3+0x4  ;; `?<Constant L"\\x51\\x75\\x69\\x63\\x6b\\x41\\x63\\x63\\`
   \   000000D8   0420A0E1           MOV      R2,R4
    349            GUIObject_SoftKeys_SetAction(gui, ACTION_BACK,GuiBack);
   \   000000DC   7C409FE5           LDR      R4,??QuickAccess_menu_3+0x8  ;; ??GuiBack
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   5D0100EF           SWI      +349
   \   000000E8   0010A0E1           MOV      R1,R0
   \   000000EC   0500A0E1           MOV      R0,R5
   \   000000F0   330100EF           SWI      +307
   \   000000F4   68009FE5           LDR      R0,??QuickAccess_menu_3+0xC  ;; ACTION_BACK
   \   000000F8   0420A0E1           MOV      R2,R4
   \   000000FC   001090E5           LDR      R1,[R0, #+0]
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000108   2118A0E1           MOV      R1,R1, LSR #+16
   \   0000010C   4B0100EF           SWI      +331
    350            GUIObject_SoftKeys_SetAction(gui, ACTION_LONG_BACK,GuiBack);
   \   00000110   50009FE5           LDR      R0,??QuickAccess_menu_3+0x10  ;; ACTION_LONG_BACK
   \   00000114   0420A0E1           MOV      R2,R4
   \   00000118   001090E5           LDR      R1,[R0, #+0]
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000124   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000128   4B0100EF           SWI      +331
    351            GUIObject_SoftKeys_SetAction(gui, ACTION_SELECT1,GuiOnEnterPressed);
   \   0000012C   38009FE5           LDR      R0,??QuickAccess_menu_3+0x14  ;; ACTION_SELECT1
   \   00000130   38209FE5           LDR      R2,??QuickAccess_menu_3+0x18  ;; ??GuiOnEnterPressed
   \   00000134   001090E5           LDR      R1,[R0, #+0]
   \   00000138   0500A0E1           MOV      R0,R5
   \   0000013C   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000140   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000144   4B0100EF           SWI      +331
    352            GUIObject_Show(gui);
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   340100EF           SWI      +308
    353          }
   \   00000150   2CD08DE2           ADD      SP,SP,#+44
   \   00000154   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??QuickAccess_menu_3:
   \   00000158   ........           DC32     ??GuiOnLBMessage
   \   0000015C   ........           DC32     `?<Constant L"\\x51\\x75\\x69\\x63\\x6b\\x41\\x63\\x63\\`
   \   00000160   ........           DC32     ??GuiBack
   \   00000164   ........           DC32     ACTION_BACK
   \   00000168   ........           DC32     ACTION_LONG_BACK
   \   0000016C   ........           DC32     ACTION_SELECT1
   \   00000170   ........           DC32     ??GuiOnEnterPressed
    354          

   \                                 In segment CODE, align 4, keep-with-next
    355          int KeyPr ( int key, int r1, int mode, LPARAM lparam, DISP_OBJ*db )
    356          {
   \                     ??KeyPr:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   20909DE5           LDR      R9,[SP, #+32]
   \   0000000C   0250A0E1           MOV      R5,R2
    357            
    358            if(key==0x28 && mode==KBD_LONG_PRESS && !(isKeylocked()))
   \   00000010   280054E3           CMP      R4,#+40
   \   00000014   0900001A           BNE      ??KeyPr_1
   \   00000018   64049FE5           LDR      R0,??KeyPr_2     ;; KBD_LONG_PRESS
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000055E1           CMP      R5,R0
   \   00000024   0500001A           BNE      ??KeyPr_1
   \   00000028   B70100EF           SWI      +439
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0200001A           BNE      ??KeyPr_1
    359            {
    360              Create_QuickAccessMenu();
   \   00000034   ........           BL       ??Create_QuickAccessMenu
    361              return -1;
   \   00000038   0000E0E3           MVN      R0,#+0
   \   0000003C   F087BDE8           POP      {R4-R10,PC}
    362            }
    363            //--------------------------------
    364            if(key == KEY_UP && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_1:
   \   00000040   40049FE5           LDR      R0,??KeyPr_2+0x4  ;; KBD_SHORT_PRESS
   \   00000044   40749FE5           LDR      R7,??KeyPr_2+0x8  ;; ??isBook
   \   00000048   006090E5           LDR      R6,[R0, #+0]
   \   0000004C   3C049FE5           LDR      R0,??KeyPr_2+0xC  ;; KEY_UP
   \   00000050   ........           LDR      R8,??DataTable26  ;; `?<Constant "QAMenu_Book">`
   \   00000054   000090E5           LDR      R0,[R0, #+0]
   \   00000058   000054E1           CMP      R4,R0
   \   0000005C   06005501           CMPEQ    R5,R6
   \   00000060   1200001A           BNE      ??KeyPr_3
   \   00000064   B70100EF           SWI      +439
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0F00001A           BNE      ??KeyPr_3
   \   00000070   1B0300EF           SWI      +795
   \   00000074   00A0A0E1           MOV      R10,R0
   \   00000078   0810A0E1           MOV      R1,R8
   \   0000007C   0700A0E1           MOV      R0,R7
   \   00000080   E30200EF           SWI      +739
   \   00000084   00005AE1           CMP      R10,R0
   \   00000088   0800001A           BNE      ??KeyPr_3
    365            {
    366              GUI* gui = DispObject_GetGUI(db);
   \   0000008C   0900A0E1           MOV      R0,R9
   \   00000090   1C0200EF           SWI      +540
   \   00000094   00A0A0E1           MOV      R10,R0
    367              if(ListMenu_GetSelectedItem(gui)==6)
   \   00000098   3E0100EF           SWI      +318
   \   0000009C   060050E3           CMP      R0,#+6
   \   000000A0   0200001A           BNE      ??KeyPr_3
    368                ListMenu_SetCursorToItem(gui, 5);
   \   000000A4   0510A0E3           MOV      R1,#+5
   \   000000A8   0A00A0E1           MOV      R0,R10
   \   000000AC   350100EF           SWI      +309
    369            }
    370            if(key == KEY_DOWN && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_3:
   \   000000B0   DC039FE5           LDR      R0,??KeyPr_2+0x10  ;; KEY_DOWN
   \   000000B4   000090E5           LDR      R0,[R0, #+0]
   \   000000B8   000054E1           CMP      R4,R0
   \   000000BC   06005501           CMPEQ    R5,R6
   \   000000C0   1200001A           BNE      ??KeyPr_4
   \   000000C4   B70100EF           SWI      +439
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0F00001A           BNE      ??KeyPr_4
   \   000000D0   1B0300EF           SWI      +795
   \   000000D4   00A0A0E1           MOV      R10,R0
   \   000000D8   0810A0E1           MOV      R1,R8
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   E30200EF           SWI      +739
   \   000000E4   00005AE1           CMP      R10,R0
   \   000000E8   0800001A           BNE      ??KeyPr_4
    371            {
    372              GUI* gui = DispObject_GetGUI(db);
   \   000000EC   0900A0E1           MOV      R0,R9
   \   000000F0   1C0200EF           SWI      +540
   \   000000F4   0090A0E1           MOV      R9,R0
    373              if(ListMenu_GetSelectedItem(gui)==4)
   \   000000F8   3E0100EF           SWI      +318
   \   000000FC   040050E3           CMP      R0,#+4
   \   00000100   0200001A           BNE      ??KeyPr_4
    374                ListMenu_SetCursorToItem(gui, 5);
   \   00000104   0510A0E3           MOV      R1,#+5
   \   00000108   0900A0E1           MOV      R0,R9
   \   0000010C   350100EF           SWI      +309
    375            }
    376            //---------------------------------
    377            
    378            
    379            if(key == KEY_DIGITAL_0+1 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_4:
   \   00000110   80039FE5           LDR      R0,??KeyPr_2+0x14  ;; KEY_DIGITAL_0
   \   00000114   009090E5           LDR      R9,[R0, #+0]
   \   00000118   010089E2           ADD      R0,R9,#+1
   \   0000011C   000054E1           CMP      R4,R0
   \   00000120   06005501           CMPEQ    R5,R6
   \   00000124   0C00001A           BNE      ??KeyPr_5
   \   00000128   B70100EF           SWI      +439
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   0900001A           BNE      ??KeyPr_5
   \   00000134   1B0300EF           SWI      +795
   \   00000138   00A0A0E1           MOV      R10,R0
   \   0000013C   0810A0E1           MOV      R1,R8
   \   00000140   0700A0E1           MOV      R0,R7
   \   00000144   E30200EF           SWI      +739
   \   00000148   00005AE1           CMP      R10,R0
   \   0000014C   0200001A           BNE      ??KeyPr_5
    380            {
    381              SelectMenuItem_Reboot(Display_GetTopBook(0));
   \   00000150   0000A0E3           MOV      R0,#+0
   \   00000154   1B0300EF           SWI      +795
   \   00000158   ........           BL       ??Create_QuestionReboot
    382            }
    383               
    384            if(key == KEY_DIGITAL_0+2 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_5:
   \   0000015C   020089E2           ADD      R0,R9,#+2
   \   00000160   000054E1           CMP      R4,R0
   \   00000164   06005501           CMPEQ    R5,R6
   \   00000168   0C00001A           BNE      ??KeyPr_6
   \   0000016C   B70100EF           SWI      +439
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   0900001A           BNE      ??KeyPr_6
   \   00000178   1B0300EF           SWI      +795
   \   0000017C   00A0A0E1           MOV      R10,R0
   \   00000180   0810A0E1           MOV      R1,R8
   \   00000184   0700A0E1           MOV      R0,R7
   \   00000188   E30200EF           SWI      +739
   \   0000018C   00005AE1           CMP      R10,R0
   \   00000190   0200001A           BNE      ??KeyPr_6
    385            {
    386              SelectMenuItem_Shutdown(Display_GetTopBook(0));
   \   00000194   0000A0E3           MOV      R0,#+0
   \   00000198   1B0300EF           SWI      +795
   \   0000019C   ........           BL       ??Create_QuestionShutdown
    387            }
    388            
    389            if(key == KEY_DIGITAL_0+3 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_6:
   \   000001A0   030089E2           ADD      R0,R9,#+3
   \   000001A4   000054E1           CMP      R4,R0
   \   000001A8   06005501           CMPEQ    R5,R6
   \   000001AC   0A00001A           BNE      ??KeyPr_7
   \   000001B0   B70100EF           SWI      +439
   \   000001B4   000050E3           CMP      R0,#+0
   \   000001B8   0700001A           BNE      ??KeyPr_7
   \   000001BC   1B0300EF           SWI      +795
   \   000001C0   00A0A0E1           MOV      R10,R0
   \   000001C4   0810A0E1           MOV      R1,R8
   \   000001C8   0700A0E1           MOV      R0,R7
   \   000001CC   E30200EF           SWI      +739
   \   000001D0   00005AE1           CMP      R10,R0
   \   000001D4   0000001A           BNE      ??KeyPr_7
    390            {
    391              SelectMenuItem_KeyLock();
   \   000001D8   ........           BL       ??SelectMenuItem_KeyLock
    392            }
    393               
    394            if(key == KEY_DIGITAL_0+4 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_7:
   \   000001DC   040089E2           ADD      R0,R9,#+4
   \   000001E0   000054E1           CMP      R4,R0
   \   000001E4   06005501           CMPEQ    R5,R6
   \   000001E8   0A00001A           BNE      ??KeyPr_8
   \   000001EC   B70100EF           SWI      +439
   \   000001F0   000050E3           CMP      R0,#+0
   \   000001F4   0700001A           BNE      ??KeyPr_8
   \   000001F8   1B0300EF           SWI      +795
   \   000001FC   00A0A0E1           MOV      R10,R0
   \   00000200   0810A0E1           MOV      R1,R8
   \   00000204   0700A0E1           MOV      R0,R7
   \   00000208   E30200EF           SWI      +739
   \   0000020C   00005AE1           CMP      R10,R0
   \   00000210   0000001A           BNE      ??KeyPr_8
    395            {
    396              SelectMenuItem_SilenceMode();
   \   00000214   ........           BL       ??SelectMenuItem_SilenceMode
    397            }
    398               
    399            if(key == KEY_DIGITAL_0+5 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_8:
   \   00000218   050089E2           ADD      R0,R9,#+5
   \   0000021C   000054E1           CMP      R4,R0
   \   00000220   06005501           CMPEQ    R5,R6
   \   00000224   0B00001A           BNE      ??KeyPr_9
   \   00000228   B70100EF           SWI      +439
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   0800001A           BNE      ??KeyPr_9
   \   00000234   1B0300EF           SWI      +795
   \   00000238   00A0A0E1           MOV      R10,R0
   \   0000023C   0810A0E1           MOV      R1,R8
   \   00000240   0700A0E1           MOV      R0,R7
   \   00000244   E30200EF           SWI      +739
   \   00000248   00005AE1           CMP      R10,R0
   \   0000024C   0100001A           BNE      ??KeyPr_9
    400            {
    401              SelectMenuItem_FlashLight();
   \   00000250   0100A0E3           MOV      R0,#+1
   \   00000254   780100EF           SWI      +376
    402            }
    403            // profile   
    404            if(key == KEY_DIGITAL_0+6 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_9:
   \   00000258   060089E2           ADD      R0,R9,#+6
   \   0000025C   000054E1           CMP      R4,R0
   \   00000260   06005501           CMPEQ    R5,R6
   \   00000264   0C00001A           BNE      ??KeyPr_10
   \   00000268   B70100EF           SWI      +439
   \   0000026C   000050E3           CMP      R0,#+0
   \   00000270   0900001A           BNE      ??KeyPr_10
   \   00000274   1B0300EF           SWI      +795
   \   00000278   00A0A0E1           MOV      R10,R0
   \   0000027C   0810A0E1           MOV      R1,R8
   \   00000280   0700A0E1           MOV      R0,R7
   \   00000284   E30200EF           SWI      +739
   \   00000288   00005AE1           CMP      R10,R0
   \   0000028C   0200001A           BNE      ??KeyPr_10
    405            {
    406               SelectMenuItem_SelectProfile(0);
   \   00000290   0010A0E3           MOV      R1,#+0
   \   00000294   0000A0E3           MOV      R0,#+0
   \   00000298   B50100EF           SWI      +437
    407            }
    408            if(key == KEY_DIGITAL_0+7 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_10:
   \   0000029C   070089E2           ADD      R0,R9,#+7
   \   000002A0   000054E1           CMP      R4,R0
   \   000002A4   06005501           CMPEQ    R5,R6
   \   000002A8   0C00001A           BNE      ??KeyPr_11
   \   000002AC   B70100EF           SWI      +439
   \   000002B0   000050E3           CMP      R0,#+0
   \   000002B4   0900001A           BNE      ??KeyPr_11
   \   000002B8   1B0300EF           SWI      +795
   \   000002BC   00A0A0E1           MOV      R10,R0
   \   000002C0   0810A0E1           MOV      R1,R8
   \   000002C4   0700A0E1           MOV      R0,R7
   \   000002C8   E30200EF           SWI      +739
   \   000002CC   00005AE1           CMP      R10,R0
   \   000002D0   0200001A           BNE      ??KeyPr_11
    409            {
    410               SelectMenuItem_SelectProfile(1);
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   0100A0E3           MOV      R0,#+1
   \   000002DC   B50100EF           SWI      +437
    411            }
    412            if(key == KEY_DIGITAL_0+8 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_11:
   \   000002E0   080089E2           ADD      R0,R9,#+8
   \   000002E4   000054E1           CMP      R4,R0
   \   000002E8   06005501           CMPEQ    R5,R6
   \   000002EC   0C00001A           BNE      ??KeyPr_12
   \   000002F0   B70100EF           SWI      +439
   \   000002F4   000050E3           CMP      R0,#+0
   \   000002F8   0900001A           BNE      ??KeyPr_12
   \   000002FC   1B0300EF           SWI      +795
   \   00000300   00A0A0E1           MOV      R10,R0
   \   00000304   0810A0E1           MOV      R1,R8
   \   00000308   0700A0E1           MOV      R0,R7
   \   0000030C   E30200EF           SWI      +739
   \   00000310   00005AE1           CMP      R10,R0
   \   00000314   0200001A           BNE      ??KeyPr_12
    413            {
    414               SelectMenuItem_SelectProfile(2);
   \   00000318   0210A0E3           MOV      R1,#+2
   \   0000031C   0200A0E3           MOV      R0,#+2
   \   00000320   B50100EF           SWI      +437
    415            }
    416            if(key == KEY_DIGITAL_0+9 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_12:
   \   00000324   090089E2           ADD      R0,R9,#+9
   \   00000328   000054E1           CMP      R4,R0
   \   0000032C   06005501           CMPEQ    R5,R6
   \   00000330   0C00001A           BNE      ??KeyPr_13
   \   00000334   B70100EF           SWI      +439
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   0900001A           BNE      ??KeyPr_13
   \   00000340   1B0300EF           SWI      +795
   \   00000344   00A0A0E1           MOV      R10,R0
   \   00000348   0810A0E1           MOV      R1,R8
   \   0000034C   0700A0E1           MOV      R0,R7
   \   00000350   E30200EF           SWI      +739
   \   00000354   00005AE1           CMP      R10,R0
   \   00000358   0200001A           BNE      ??KeyPr_13
    417            {
    418               SelectMenuItem_SelectProfile(3);
   \   0000035C   0310A0E3           MOV      R1,#+3
   \   00000360   0300A0E3           MOV      R0,#+3
   \   00000364   B50100EF           SWI      +437
    419            }
    420            if(key == KEY_STAR && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_13:
   \   00000368   2C019FE5           LDR      R0,??KeyPr_2+0x18  ;; KEY_STAR
   \   0000036C   000090E5           LDR      R0,[R0, #+0]
   \   00000370   000054E1           CMP      R4,R0
   \   00000374   06005501           CMPEQ    R5,R6
   \   00000378   0C00001A           BNE      ??KeyPr_14
   \   0000037C   B70100EF           SWI      +439
   \   00000380   000050E3           CMP      R0,#+0
   \   00000384   0900001A           BNE      ??KeyPr_14
   \   00000388   1B0300EF           SWI      +795
   \   0000038C   00A0A0E1           MOV      R10,R0
   \   00000390   0810A0E1           MOV      R1,R8
   \   00000394   0700A0E1           MOV      R0,R7
   \   00000398   E30200EF           SWI      +739
   \   0000039C   00005AE1           CMP      R10,R0
   \   000003A0   0200001A           BNE      ??KeyPr_14
    421            {
    422               SelectMenuItem_SelectProfile(4);
   \   000003A4   0410A0E3           MOV      R1,#+4
   \   000003A8   0400A0E3           MOV      R0,#+4
   \   000003AC   B50100EF           SWI      +437
    423            }
    424            if(key == KEY_DIGITAL_0 && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_14:
   \   000003B0   090054E1           CMP      R4,R9
   \   000003B4   06005501           CMPEQ    R5,R6
   \   000003B8   0C00001A           BNE      ??KeyPr_15
   \   000003BC   B70100EF           SWI      +439
   \   000003C0   000050E3           CMP      R0,#+0
   \   000003C4   0900001A           BNE      ??KeyPr_15
   \   000003C8   1B0300EF           SWI      +795
   \   000003CC   0090A0E1           MOV      R9,R0
   \   000003D0   0810A0E1           MOV      R1,R8
   \   000003D4   0700A0E1           MOV      R0,R7
   \   000003D8   E30200EF           SWI      +739
   \   000003DC   000059E1           CMP      R9,R0
   \   000003E0   0200001A           BNE      ??KeyPr_15
    425            {
    426               SelectMenuItem_SelectProfile(5);
   \   000003E4   0510A0E3           MOV      R1,#+5
   \   000003E8   0500A0E3           MOV      R0,#+5
   \   000003EC   B50100EF           SWI      +437
    427            }
    428            if(key == KEY_DIEZ && mode == KBD_SHORT_PRESS && !(isKeylocked()) && (Display_GetTopBook(0)==FindBookEx(isBook,(int*)QUICKACCESS_MENU_BOOK_NAME)))
   \                     ??KeyPr_15:
   \   000003F0   A8009FE5           LDR      R0,??KeyPr_2+0x1C  ;; KEY_DIEZ
   \   000003F4   000090E5           LDR      R0,[R0, #+0]
   \   000003F8   000054E1           CMP      R4,R0
   \   000003FC   06005501           CMPEQ    R5,R6
   \   00000400   0C00001A           BNE      ??KeyPr_16
   \   00000404   B70100EF           SWI      +439
   \   00000408   000050E3           CMP      R0,#+0
   \   0000040C   0900001A           BNE      ??KeyPr_16
   \   00000410   1B0300EF           SWI      +795
   \   00000414   0060A0E1           MOV      R6,R0
   \   00000418   0810A0E1           MOV      R1,R8
   \   0000041C   0700A0E1           MOV      R0,R7
   \   00000420   E30200EF           SWI      +739
   \   00000424   000056E1           CMP      R6,R0
   \   00000428   0200001A           BNE      ??KeyPr_16
    429            {
    430               SelectMenuItem_SelectProfile(6);
   \   0000042C   0610A0E3           MOV      R1,#+6
   \   00000430   0600A0E3           MOV      R0,#+6
   \   00000434   B50100EF           SWI      +437
    431            }
    432            /*
    433            if(key==0x28 && mode==KBD_LONG_PRESS && (isKeylocked()))
    434            {
    435              UI_Event(UI_SLEEPMODE_DEACTIVATE_EVENT);
    436              UI_Event(UI_KEYLOCK_DEACTIVATE_EVENT);
    437              return -1;
    438            } */
    439            
    440            if(key==0x28 && mode==KBD_SHORT_RELEASE && !(isKeylocked()))
   \                     ??KeyPr_16:
   \   00000438   280054E3           CMP      R4,#+40
   \   0000043C   0E00001A           BNE      ??KeyPr_17
   \   00000440   5C009FE5           LDR      R0,??KeyPr_2+0x20  ;; KBD_SHORT_RELEASE
   \   00000444   000090E5           LDR      R0,[R0, #+0]
   \   00000448   000055E1           CMP      R5,R0
   \   0000044C   0A00001A           BNE      ??KeyPr_17
   \   00000450   B70100EF           SWI      +439
   \   00000454   000050E3           CMP      R0,#+0
   \   00000458   0700001A           BNE      ??KeyPr_17
    441            {
    442              UI_Event(UI_KEYLOCK_ACTIVATE_EVENT);
   \   0000045C   ........           LDR      R0,??DataTable27  ;; UI_KEYLOCK_ACTIVATE_EVENT
   \   00000460   000090E5           LDR      R0,[R0, #+0]
   \   00000464   A80100EF           SWI      +424
    443              UI_Event(UI_SLEEPMODE_ACTIVATE_EVENT);
   \   00000468   ........           LDR      R0,??DataTable28  ;; UI_SLEEPMODE_ACTIVATE_EVENT
   \   0000046C   000090E5           LDR      R0,[R0, #+0]
   \   00000470   A80100EF           SWI      +424
    444              return -1;
   \   00000474   0000E0E3           MVN      R0,#+0
   \   00000478   F087BDE8           POP      {R4-R10,PC}
    445            }
    446          
    447            return 0;
   \                     ??KeyPr_17:
   \   0000047C   0000A0E3           MOV      R0,#+0
   \   00000480   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??KeyPr_2:
   \   00000484   ........           DC32     KBD_LONG_PRESS
   \   00000488   ........           DC32     KBD_SHORT_PRESS
   \   0000048C   ........           DC32     ??isBook
   \   00000490   ........           DC32     KEY_UP
   \   00000494   ........           DC32     KEY_DOWN
   \   00000498   ........           DC32     KEY_DIGITAL_0
   \   0000049C   ........           DC32     KEY_STAR
   \   000004A0   ........           DC32     KEY_DIEZ
   \   000004A4   ........           DC32     KBD_SHORT_RELEASE
    448          }
    449          

   \                                 In segment CODE, align 4, keep-with-next
    450          int TerminateElf(void * ,BOOK* book)
    451          {
   \                     ??TerminateElf:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
    452            FreeBook(book);
   \   00000008   2F0100EF           SWI      +303
    453            return(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   0080BDE8           POP      {PC}             ;; return
    454          }
    455          
    456          typedef struct
    457          {
    458            BOOK * book;
    459          }MSG;
    460          

   \                                 In segment CODE, align 4, keep-with-next
    461          int ShowAuthorInfo(void *mess ,BOOK* book)
    462          {
    463            MSG * msg = (MSG*)mess;
    464            wchar_t info[256];
    465            snwprintf(info,255,L"%s \nv.%s\n(c)Metaler\n%s",ELF_NAME,ELF_VER,__DATE__);
   \                     ??ShowAuthorInfo:
   \   00000000   74209FE5           LDR      R2,??ShowAuthorInfo_1+0x4  ;; `?<Constant L"\\x25\\x73\\x20\\xa\\x76\\x2e\\x25\\x73\\x`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   80DF4DE2           SUB      SP,SP,#+512
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   3C0082E2           ADD      R0,R2,#+60
   \   00000014   01002DE9           PUSH     {R0}
   \   00000018   303082E2           ADD      R3,R2,#+48
   \   0000001C   FF10A0E3           MOV      R1,#+255
    466            MessageBox(EMPTY_TEXTID,TextID_Create(info,ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,0,msg->book);
   \   00000020   FF50A0E3           MOV      R5,#+255
   \   00000024   130F8FE2           ADR      R0,??ShowAuthorInfo_1  ;; "1.0"
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000030   08008DE2           ADD      R0,SP,#+8
   \   00000034   150100EF           SWI      +277
   \   00000038   0520A0E1           MOV      R2,R5
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   08008DE2           ADD      R0,SP,#+8
   \   00000044   5D0100EF           SWI      +349
   \   00000048   001094E5           LDR      R1,[R4, #+0]
   \   0000004C   0130A0E3           MOV      R3,#+1
   \   00000050   02002DE9           PUSH     {R1}
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   02002DE9           PUSH     {R1}
   \   00000060   0010A0E1           MOV      R1,R0
   \   00000064   9004E0E3           MVN      R0,#-1879048192
   \   00000068   570200EF           SWI      +599
    467            return(1);
   \   0000006C   0100A0E3           MOV      R0,#+1
   \   00000070   84DF8DE2           ADD      SP,SP,#+528
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??ShowAuthorInfo_1:
   \   00000078   312E3000           DC8      "1.0"
   \   0000007C   ........           DC32     `?<Constant L"\\x25\\x73\\x20\\xa\\x76\\x2e\\x25\\x73\\x`
    468          }
    469          

   \                                 In segment DYN_PAGE, align 4, align-sorted
    470          const PAGE_MSG QuickAccess_PageEvents[]@ "DYN_PAGE" ={
   \                     QuickAccess_PageEvents:
   \   00000000   E5030000....       DC32 997, ??TerminateElf, 998, ??ShowAuthorInfo, 0, 0H
   \              ....E6030000
   \              ........0000
   \              000000000000

   \                                 In segment DATA_I, align 4, align-sorted
   \                     QuickAccessBook:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for QuickAccessBook>`
    471            ELF_TERMINATE_EVENT , TerminateElf,
    472            ELF_SHOW_INFO_EVENT  , ShowAuthorInfo,
    473            0,0
    474          };
    475          
    476          PAGE_DESC base_page = {"QuickAccess_BasePage",0,QuickAccess_PageEvents};
   \                     base_page:
   \   00000004                      DS8 12
   \   00000010                      REQUIRE `?<Initializer for base_page>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     names_textid:
   \   00000000                      DS8 52
   \   00000034                      REQUIRE `?<Initializer for names_textid>`
   \                     names_str:
   \   00000034                      DS8 24
   \   0000004C                      REQUIRE `?<Initializer for names_str>`
   \                     imageid:
   \   0000004C                      DS8 52
   \   00000080                      REQUIRE `?<Initializer for imageid>`
    477          

   \                                 In segment CODE, align 4, keep-with-next
    478          void elf_exit(void)
    479          
    480          {
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
    481            kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     ELF_BEGIN
    482          }
    483          

   \                                 In segment CODE, align 4, keep-with-next
    484          void OnClose_QuickAccessBook(BOOK * book)
    485          {
   \                     ??OnClose_QuickAccessBook:
   \   00000000   00402DE9           PUSH     {LR}
    486            if (book)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD08           POPEQ    {PC}
    487            {
    488              ModifyKeyHook( KeyPr,0,0 );
   \   0000000C   ........           LDR      R0,??DataTable34  ;; ??KeyPr
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   070100EF           SWI      +263
    489              SUBPROC(elf_exit);
   \   0000001C   ........           LDR      R0,??DataTable33  ;; ??elf_exit
   \   00000020   080100EF           SWI      +264
    490            }
    491          }
   \   00000024   0080BDE8           POP      {PC}             ;; return
    492          
    493          //Проверяем, а не запущен ли наш эльф?------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    494          int Find_QuickAccessBook(BOOK* book)
    495          {
    496            if(!strcmp(book->xbook->name,ELF_NAME))
   \                     ??Find_QuickAccessBook:
   \   00000000   ........           LDR      R1,??DataTable32  ;; `?<Constant L"\\x25\\x73\\x20\\xa\\x76\\x2e\\x25\\x73\\x` + 48
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
    497              return(1);
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
    498            return(0);
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
    499          }
    500          

   \                                 In segment CODE, align 4, keep-with-next
    501          BOOK * Create_QuickAccessBook()
    502          {
   \                     ??Create_QuickAccessBook:
   \   00000000   10402DE9           PUSH     {R4,LR}
    503            QuickAccessBook = new BOOK;
   \   00000004   34409FE5           LDR      R4,??Create_QuickAccessBook_1  ;; QuickAccessBook
   \   00000008   1800A0E3           MOV      R0,#+24
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
    504            CreateBook(QuickAccessBook, OnClose_QuickAccessBook, &base_page, ELF_NAME, -1, 0);
   \   00000010   ........           LDR      R3,??DataTable32  ;; `?<Constant L"\\x25\\x73\\x20\\xa\\x76\\x2e\\x25\\x73\\x` + 48
   \   00000014   28109FE5           LDR      R1,??Create_QuickAccessBook_1+0x4  ;; ??OnClose_QuickAccessBook
   \   00000018   000084E5           STR      R0,[R4, #+0]
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   01002DE9           PUSH     {R0}
   \   00000024   042084E2           ADD      R2,R4,#+4
   \   00000028   0000E0E1           MVN      R0,R0
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   2B0100EF           SWI      +299
    505            return(QuickAccessBook);
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??Create_QuickAccessBook_1:
   \   00000040   ........           DC32     QuickAccessBook
   \   00000044   ........           DC32     ??OnClose_QuickAccessBook
    506          }
    507          

   \                                 In segment CODE, align 4, keep-with-next
    508          int main (void)
    509          {
    510            if (FindBook(Find_QuickAccessBook))
   \                     main:
   \   00000000   7C009FE5           LDR      R0,??main_0      ;; ??Find_QuickAccessBook
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   300100EF           SWI      +304
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1400000A           BEQ      ??main_1
    511            {
    512              MessageBox(EMPTY_TEXTID,STR("Ну хватит меня тыкать ;("),NOIMAGE,1,5000,0);
   \   00000014   6C009FE5           LDR      R0,??main_0+0x4  ;; `?<Constant L"\\x41d\\x443\\x20\\x445\\x432\\x430\\x44`
   \   00000018   FF40A0E3           MOV      R4,#+255
   \   0000001C   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000020   0420A0E1           MOV      R2,R4
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   5D0100EF           SWI      +349
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   02002DE9           PUSH     {R1}
   \   00000034   0130A0E3           MOV      R3,#+1
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   8810A0E3           MOV      R1,#+136
   \   00000040   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000044   02002DE9           PUSH     {R1}
   \   00000048   0010A0E1           MOV      R1,R0
   \   0000004C   9004E0E3           MVN      R0,#-1879048192
   \   00000050   570200EF           SWI      +599
    513              SUBPROC(elf_exit);
   \   00000054   ........           LDR      R0,??DataTable33  ;; ??elf_exit
   \   00000058   080100EF           SWI      +264
    514            }
    515            else
    516            {
    517              Create_QuickAccessBook();
    518              ModifyKeyHook( KeyPr, KEY_HOOK_ADD, NULL );
    519              return(0);
    520            }
    521          }
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   08D08DE2           ADD      SP,SP,#+8
   \   00000064   1080BDE8           POP      {R4,PC}
   \                     ??main_1:
   \   00000068   ........           BL       ??Create_QuickAccessBook
   \   0000006C   ........           LDR      R0,??DataTable34  ;; ??KeyPr
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   070100EF           SWI      +263
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??main_0:
   \   00000084   ........           DC32     ??Find_QuickAccessBook
   \   00000088   ........           DC32     `?<Constant L"\\x41d\\x443\\x20\\x445\\x432\\x430\\x44`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     QuestionReboot_GUI

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     QuestionShutdown_GUI

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     VAR_ARG_YESNO_PRE_QUESTION

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     VAR_ARG_YESNO_NO_ACTION

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     VAR_ARG_YESNO_YES_ACTION

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     VAR_ARG_BOOK

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     mbk

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     names_textid

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     SYNC

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     `?<Constant "QAMenu_Book">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     UI_KEYLOCK_ACTIVATE_EVENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     UI_SLEEPMODE_ACTIVATE_EVENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     `?<Constant L"\\x25\\x73\\x20\\xa\\x76\\x2e\\x25\\x73\\x` + 48

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     ??elf_exit

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   ........           DC32     ??KeyPr

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for QuickAccessBook>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for base_page>`:
   \   00000004   ........0000       DC32 `?<Constant "QuickAccess_BasePage">`, 0H, QuickAccess_PageEvents
   \              0000........

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for names_textid>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \                     `?<Initializer for names_str>`:
   \   00000034   ........           DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x437\\x430\\x4`
   \   00000038   ........           DC32 `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4`
   \   0000003C   ........           DC32 `?<Constant L"\\x411\\x43b\\x43e\\x43a\\x438\\x440\\x4`
   \   00000040   ........           DC32 `?<Constant L"\\x20">`
   \   00000044   ........           DC32 `?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4`
   \   00000048   ........           DC32 `?<Constant L"\\x20">`
   \                     `?<Initializer for imageid>`:
   \   0000004C   FE0800003F01       DC32 2302, 319, 1146, 2078, 737, 65535, 2013, 2010, 2004, 2019, 2025
   \              00007A040000
   \              1E080000E102
   \              0000FFFF0000
   \              DD070000DA07
   \              0000D4070000
   \              E3070000E907
   \              0000        
   \   00000078   D1070000E007       DC32 2001, 2016
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x437\\x430\\x4`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   370430043304       DC8 37H, 4, 30H, 4, 33H, 4, 40H, 4
   \              4004        
   \   00000010   430437043A04       DC8 43H, 4, 37H, 4, 3AH, 4, 30H, 4
   \              3004        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4`:
   \   00000000   12044B043A04       DC8 12H, 4, 4BH, 4, 3AH, 4, 3BH, 4
   \              3B04        
   \   00000008   4E0447043504       DC8 4EH, 4, 47H, 4, 35H, 4, 3DH, 4
   \              3D04        
   \   00000010   380435040000       DC8 38H, 4, 35H, 4, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x411\\x43b\\x43e\\x43a\\x438\\x440\\x4`:
   \   00000000   11043B043E04       DC8 11H, 4, 3BH, 4, 3EH, 4, 3AH, 4
   \              3A04        
   \   00000008   380440043E04       DC8 38H, 4, 40H, 4, 3EH, 4, 32H, 4
   \              3204        
   \   00000010   3A0430040000       DC8 3AH, 4, 30H, 4, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x20">`:
   \   00000000   20000000           DC8 20H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4`:
   \   00000000   24043E043D04       DC8 24H, 4, 3EH, 4, 3DH, 4, 30H, 4
   \              3004        
   \   00000008   400438043A04       DC8 40H, 4, 38H, 4, 3AH, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "QuickAccess_BasePage">`:
   \   00000000   517569636B41       DC8 "QuickAccess_BasePage"
   \              63636573735F
   \              426173655061
   \              676500      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "PB_UI_CallListBook">`:
   \   00000000   50425F55495F       DC8 "PB_UI_CallListBook"
   \              43616C6C4C69
   \              7374426F6F6B
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "QAMenu_Book">`:
   \   00000000   51414D656E75       DC8 "QAMenu_Book"
   \              5F426F6F6B00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x437\\x430\\x4_1`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   370430043304       DC8 37H, 4, 30H, 4, 33H, 4, 40H, 4
   \              4004        
   \   00000010   430437043804       DC8 43H, 4, 37H, 4, 38H, 4, 42H, 4
   \              4204        
   \   00000018   4C0420004204       DC8 4CH, 4, 20H, 0, 42H, 4, 35H, 4
   \              3504        
   \   00000020   3B0435044404       DC8 3BH, 4, 35H, 4, 44H, 4, 3EH, 4
   \              3E04        
   \   00000028   3D043F000000       DC8 3DH, 4, 3FH, 0, 0, 0
   \   0000002E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4_1`:
   \   00000000   12044B043A04       DC8 12H, 4, 4BH, 4, 3AH, 4, 3BH, 4
   \              3B04        
   \   00000008   4E0447043804       DC8 4EH, 4, 47H, 4, 38H, 4, 42H, 4
   \              4204        
   \   00000010   4C0420004204       DC8 4CH, 4, 20H, 0, 42H, 4, 35H, 4
   \              3504        
   \   00000018   3B0435044404       DC8 3BH, 4, 35H, 4, 44H, 4, 3EH, 4
   \              3E04        
   \   00000020   3D043F000000       DC8 3DH, 4, 3FH, 0, 0, 0
   \   00000026   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x442\\x43a\\x43b\\x2e\\x20\\x431`:
   \   00000000   1E0442043A04       DC8 1EH, 4, 42H, 4, 3AH, 4, 3BH, 4
   \              3B04        
   \   00000008   2E0020003104       DC8 2EH, 0, 20H, 0, 31H, 4, 35H, 4
   \              3504        
   \   00000010   370437043204       DC8 37H, 4, 37H, 4, 32H, 4, 43H, 4
   \              4304        
   \   00000018   47043D044B04       DC8 47H, 4, 3DH, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0
   \   00000024   12043A043B04       DC8 12H, 4, 3AH, 4, 3BH, 4, 2EH, 0
   \              2E00        
   \   0000002C   200031043504       DC8 20H, 0, 31H, 4, 35H, 4, 37H, 4
   \              3704        
   \   00000034   370432044304       DC8 37H, 4, 32H, 4, 43H, 4, 47H, 4
   \              4704        
   \   0000003C   3D044B043904       DC8 3DH, 4, 4BH, 4, 39H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x25\\x69\\x2d\\x25\\x69\\x2d\\x25\\x69\\`:
   \   00000000   250069002D00       DC8 25H, 0, 69H, 0, 2DH, 0, 25H, 0
   \              2500        
   \   00000008   69002D002500       DC8 69H, 0, 2DH, 0, 25H, 0, 69H, 0
   \              6900        
   \   00000010   20007C002000       DC8 20H, 0, 7CH, 0, 20H, 0, 25H, 0
   \              2500        
   \   00000018   69003A002500       DC8 69H, 0, 3AH, 0, 25H, 0, 69H, 0
   \              6900        
   \   00000020   3A0025006900       DC8 3AH, 0, 25H, 0, 69H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x51\\x75\\x69\\x63\\x6b\\x41\\x63\\x63\\`:
   \   00000000   510075006900       DC8 51H, 0, 75H, 0, 69H, 0, 63H, 0
   \              6300        
   \   00000008   6B0041006300       DC8 6BH, 0, 41H, 0, 63H, 0, 63H, 0
   \              6300        
   \   00000010   650073007300       DC8 65H, 0, 73H, 0, 73H, 0, 4DH, 0
   \              4D00        
   \   00000018   65006E007500       DC8 65H, 0, 6EH, 0, 75H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x25\\x73\\x20\\xa\\x76\\x2e\\x25\\x73\\x`:
   \   00000000   250073002000       DC8 25H, 0, 73H, 0, 20H, 0, 0AH, 0
   \              0A00        
   \   00000008   76002E002500       DC8 76H, 0, 2EH, 0, 25H, 0, 73H, 0
   \              7300        
   \   00000010   0A0028006300       DC8 0AH, 0, 28H, 0, 63H, 0, 29H, 0
   \              2900        
   \   00000018   4D0065007400       DC8 4DH, 0, 65H, 0, 74H, 0, 61H, 0
   \              6100        
   \   00000020   6C0065007200       DC8 6CH, 0, 65H, 0, 72H, 0, 0AH, 0
   \              0A00        
   \   00000028   250073000000       DC8 25H, 0, 73H, 0, 0, 0
   \   0000002E   0000               DC8 0, 0
   \   00000030   517569636B41       DC8 "QuickAccess"
   \              636365737300
   \   0000003C   417567203138       DC8 "Aug 18 2015"
   \              203230313500

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   312E3000           DC8 "1.0"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x443\\x20\\x445\\x432\\x430\\x44`:
   \   00000000   1D0443042000       DC8 1DH, 4, 43H, 4, 20H, 0, 45H, 4
   \              4504        
   \   00000008   320430044204       DC8 32H, 4, 30H, 4, 42H, 4, 38H, 4
   \              3804        
   \   00000010   420420003C04       DC8 42H, 4, 20H, 0, 3CH, 4, 35H, 4
   \              3504        
   \   00000018   3D044F042000       DC8 3DH, 4, 4FH, 4, 20H, 0, 42H, 4
   \              4204        
   \   00000020   4B043A043004       DC8 4BH, 4, 3AH, 4, 30H, 4, 42H, 4
   \              4204        
   \   00000028   4C0420003B00       DC8 4CH, 4, 20H, 0, 3BH, 0, 28H, 0
   \              2800        
   \   00000030   0000               DC8 0, 0
   \   00000032   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     Create_QuestionReboot(BOOK *)     36
     Create_QuestionShutdown(BOOK *)
                                       36
     Create_QuickAccessBook()          16
     Create_QuickAccessMenu()           4
     Create_QuickAccessMenuBook()      16
     Find_QuickAccessBook(BOOK *)       4
     GuiBack(BOOK *, GUI *)             8
     GuiOnEnterPressed(BOOK *, GUI *)
                                       12
     GuiOnLBMessage(GUI_MESSAGE *)     28
     KeyPr(int, int, int, LPARAM, DISP_OBJ *)
                                       32
     OnClose_QuickAccessBook(BOOK *)
                                        4
     OnNo_QuestionReboot(BOOK *, void *)
                                        8
     OnNo_QuestionShutdown(BOOK *, void *)
                                        8
     OnYes_QuestionReboot(BOOK *, void *)
                                        8
     OnYes_QuestionShutdown(BOOK *, void *)
                                        8
     QuickAccess_menu(void *, BOOK *, GUI *)
                                       68
     SelectMenuItem_FlashLight()        4
     SelectMenuItem_KeyLock()           4
     SelectMenuItem_Reboot(BOOK *)      4
     SelectMenuItem_SelectProfile(int)
                                        4
     SelectMenuItem_Shutdown(BOOK *)
                                        4
     SelectMenuItem_SilenceMode()      16
     ShowAuthorInfo(void *, BOOK *)   540
     TerminateElf(void *, BOOK *)       4
     elf_exit()                         4
     isBook(BOOK *, int *)              4
     isCallListBook(BOOK *)             4
     isMyQABook(BOOK *)                 4
     main()                            16
     onTimer(u16, LPARAM)             548


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     mbk                               4
     timer                             2
     QuestionReboot_GUI                4
     QuestionShutdown_GUI              4
     isBook(BOOK *, int *)            36
     isCallListBook(BOOK *)           44
     isMyQABook(BOOK *)               40
     OnNo_QuestionReboot(BOOK *, void *)
                                      32
     OnYes_QuestionReboot(BOOK *, void *)
                                      36
     Create_QuestionReboot(BOOK *)   128
     OnNo_QuestionShutdown(BOOK *, void *)
                                      32
     OnYes_QuestionShutdown(BOOK *, void *)
                                      36
     Create_QuestionShutdown(BOOK *)
                                     128
     GuiBack(BOOK *, GUI *)           40
     SelectMenuItem_Reboot(BOOK *)     4
     SelectMenuItem_Shutdown(BOOK *)
                                       4
     SelectMenuItem_KeyLock()         32
     SelectMenuItem_SilenceMode()    112
     SelectMenuItem_FlashLight()      16
     SelectMenuItem_SelectProfile(int)
                                      16
     GuiOnEnterPressed(BOOK *, GUI *)
                                     204
     GuiOnLBMessage(GUI_MESSAGE *)   188
     Create_QuickAccessMenuBook()     64
     Create_QuickAccessMenu()         52
     onTimer(u16, LPARAM)            156
     QuickAccess_menu(void *, BOOK *, GUI *)
                                     372
     KeyPr(int, int, int, LPARAM, DISP_OBJ *)
                                    1192
     TerminateElf(void *, BOOK *)     20
     ShowAuthorInfo(void *, BOOK *)  128
     QuickAccess_PageEvents           24
     QuickAccessBook                  16
     names_textid                    128
     elf_exit()                       28
     OnClose_QuickAccessBook(BOOK *)
                                      40
     Find_QuickAccessBook(BOOK *)     40
     Create_QuickAccessBook()         72
     main()                          140
     ??DataTable3                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable23                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable26                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable32                     4
     ??DataTable33                     4
     ??DataTable34                     4
     ?<Initializer for QuickAccessBook>
                                      16
     ?<Initializer for names_textid>
                                     128
     ?<Constant L"\x41f\x435\x440\x435\x437\x430\x4
                                      28
     ?<Constant L"\x412\x44b\x43a\x43b\x44e\x447\x4
                                      24
     ?<Constant L"\x411\x43b\x43e\x43a\x438\x440\x4
                                      24
     ?<Constant L"\x20">               4
     ?<Constant L"\x424\x43e\x43d\x430\x440\x438\x4
                                      16
     ?<Constant "QuickAccess_BasePage">
                                      24
     ?<Constant "PB_UI_CallListBook">
                                      20
     ?<Constant "QAMenu_Book">        12
     ?<Constant L"\x41f\x435\x440\x435\x437\x430\x4_1
                                      48
     ?<Constant L"\x412\x44b\x43a\x43b\x44e\x447\x4_1
                                      40
     ?<Constant L"\x41e\x442\x43a\x43b\x2e\x20\x431
                                      68
     ?<Constant L"\x25\x69\x2d\x25\x69\x2d\x25\x69\
                                      40
     ?<Constant L"\x51\x75\x69\x63\x6b\x41\x63\x63\
                                      32
     ?<Constant L"\x25\x73\x20\xa\x76\x2e\x25\x73\x
                                      72
     ?<Constant "1.0">                 4
     ?<Constant L"\x41d\x443\x20\x445\x432\x430\x44
                                      52
      Others                         168

 
 3 636 bytes in segment CODE
   508 bytes in segment DATA_C
   144 bytes in segment DATA_I
   144 bytes in segment DATA_ID
    14 bytes in segment DATA_Z
    24 bytes in segment DYN_PAGE
    24 bytes in segment INITTAB
 
 3 492 bytes of CODE  memory (+ 168 bytes shared)
   676 bytes of CONST memory
   158 bytes of DATA  memory

Errors: none
Warnings: none

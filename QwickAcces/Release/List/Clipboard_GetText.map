################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  07/Jan/2012  01:26:51                             #
#           Target CPU    =  ARM                                               #
#           List file     =  "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\List\Clipboard_GetText.map"  #
#           Output file 1 =  "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\Exe\Clipboard_GetText.elf"   #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\Obj\_cpp2.r79"               #
#                            "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\Obj\func.r79"                #
#                            "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\Obj\main.r79"                #
#                            -o                                                #
#                            "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\Exe\Clipboard_GetText.elf"   #
#                            -Felf -l                                          #
#                            "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\Release\List\Clipboard_GetText.map"  #
#                            -xms -f                                           #
#                            "C:\Embedded Workbench 4.0 Evaluation\Project\Cli #
#                            p_ExistsText\..\include\1.xcl"                    #
#                            (-carm -ynpra -V(CODE)CODE_AREA,12                #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C,DYN_CONST,DYN_CONST #
#                            _DESC,DYN_PAGE,DYN_PAGE_DESC=0-FFFFFFFF           #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF)                   #
#                            "C:\Embedded Workbench 4.0 Evaluation\ARM\LIB\dl5 #
#                            tpainl8n.r79"                                     #
#                            -s main                                           #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 0000026C  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  ARMv4M                 = USED
  ARMv4T                 = USED
  ARMv5T                 = USED
  StackAlign4            = USED
  __cpu_mode             = __pcs__interwork
  __data_model           = absolute
  __dlib_file_descriptor = 1
  __endian               = little
  __rt_version           = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\Embedded Workbench 4.0 Evaluation\Project\Clip_ExistsText\Release\Obj\_cpp2.r79
  PROGRAM MODULE, NAME : _cpp2

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000010 - 0000001B (0xc bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    00000010        CreateHWBook() (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000001C - 00000027 (0xc bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](size_t)
                                   0000001C        KeyPr(int, int, int, LPARAM, DISP_OBJ *) (main)
               stack 1 = 00000000 ( 00000004 )

    *************************************************************************

  FILE NAME : C:\Embedded Workbench 4.0 Evaluation\Project\Clip_ExistsText\Release\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        elf_exit() (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000028 - 0000003F (0x18 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               00000028        elf_exit() (main)
           seqkill                 0000002C 
           ASYNC                   0000003C 
           SYNC                    00000038 
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 000003A4 - 000003A7 (0x4 bytes), align: 2
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_VOL_UP              000003A4        KeyPr(int, int, int, LPARAM, DISP_OBJ *) (main)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 000003A8 - 000003AB (0x4 bytes), align: 2
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KBD_SHORT_PRESS         000003A8        KeyPr(int, int, int, LPARAM, DISP_OBJ *) (main)
    -------------------------------------------------------------------------
DYN_CONST_DESC
  Relative segment, address: CODE_AREA 000003AC - 000003AF (0x4 bytes), align: 2
  Segment part 568. ROOT.
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 000003B0, align: 2
  Segment part 569.
    -------------------------------------------------------------------------
DYN_PAGE_DESC
  Relative segment, address: CODE_AREA 000003C8 - 000003CB (0x4 bytes), align: 2
  Segment part 570. ROOT.

    *************************************************************************

  FILE NAME : C:\Embedded Workbench 4.0 Evaluation\Project\Clip_ExistsText\Release\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000040 - 00000047 (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   main
                                                   onCloseHWBook(BOOK *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LPARAM::LPARAM(int)     00000040 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000048 - 0000010F (0xc8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyPr(int, int, int, LPARAM, DISP_OBJ *)
                                   00000048 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000110 - 0000012B (0x1c bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 28
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elf_exit()              00000110 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000012C - 0000013F (0x14 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TerminateElf(void *, BOOK *)
                                   0000012C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000140 - 000001BF (0x80 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowAuthorInfo(void *, BOOK *)
                                   00000140 
               stack 1 = 00000000 ( 0000021C )
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 000003B0 - 000003C7 (0x18 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 0000000F (0x10 bytes), align: 2
  Segment part 7.             Intra module refs:   CreateHWBook()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HWBook                  00000000 
           base_page               00000004 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000001C0 - 000001F7 (0x38 bytes), align: 2
  Segment part 20.            Intra module refs:   CreateHWBook()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           onCloseHWBook(BOOK *)   000001C0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000001F8 - 0000023F (0x48 bytes), align: 2
  Segment part 22.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateHWBook()          000001F8 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000240 - 00000267 (0x28 bytes), align: 2
  Segment part 24.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           myFind(BOOK *)          00000240 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000268 - 0000026B (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   CreateHWBook()
                                                   myFind(BOOK *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000026C - 00000307 (0x9c bytes), align: 2
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000026C        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000308 - 0000030B (0x4 bytes), align: 2
  Segment part 28.            Intra module refs:   main
                                                   onCloseHWBook(BOOK *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000030C - 0000030F (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   main
                                                   onCloseHWBook(BOOK *)
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 0000000F (0x10 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00000398 - 000003A3 (0xc bytes), align: 2
  Segment part 35. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        00000398 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000310 - 0000031B (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000031C - 00000327 (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   KeyPr(int, int, int, LPARAM, DISP_OBJ *)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000328 - 00000377 (0x50 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 25
                                                   ShowAuthorInfo(void *, BOOK *)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000378 - 00000397 (0x20 bytes), align: 2
  Segment part 6.             Intra module refs:   main




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 0000000F          10   rel    2
START                CODE_AREA           00000010                     dse    0
CODE                 CODE_AREA      00000010 - 0000030F         300   rel    2
DATA_C               CODE_AREA      00000310 - 00000397          88   rel    2
INITTAB              CODE_AREA      00000398 - 000003A3           C   rel    2
DATA_Z               CODE_AREA           000003A4                     dse    0
DATA_N               CODE_AREA           000003A4                     dse    0
CONFIG_C             CODE_AREA           000003A4                     dse    0
DYN_CONST            CODE_AREA      000003A4 - 000003AB           8   rel    2
DYN_CONST_DESC       CODE_AREA      000003AC - 000003AF           4   rel    2
DYN_PAGE             CODE_AREA      000003B0 - 000003C7          18   rel    2
DYN_PAGE_DESC        CODE_AREA      000003C8 - 000003CB           4   rel    2
DATA_I               DATA_AREA      00000000 - 0000000F          10   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 972 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none

